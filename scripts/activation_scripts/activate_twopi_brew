#!/bin/bash
#
#  twopi_env_brew.sh
#
#     brew version of twopi_env
#
#       1) devicename = brew
#       2) set LDFLAGS, CFLAGS, CPPFLAGS to point $(brew --prefix)/xxx
#       3) add PATH the following
#               /usr/local/opt/llvm/bin

#     set enviromental variables to use twopi
#
#     this script assumes python exists under $TwoPiRoot/bin
#     normally this executable is made from virtualenv. but
#     it could be a link to an executable in other location.
#
#     TwoPi install all modules using prefix=$TwoPiRoot
#     python module is iinstalled in
#       $TwoPiRoot/lib/pythonA.B/site-packages
#     A.B is inferred from os.__file__

SC="$(dirname  "$BASH_SOURCE[0]")"
TWOPIROOT=$SC
source ${SC}/configure_env.sh

export CFLAGS="-I$(brew --prefix)/include"
export CPPFLAGS="-I$(brew --prefix)/include"
export LDPFLAGS="-L$(brew --prefix)/lib"

## this is purposly added at the very end to use futurize. but not to use pytonn in
## venv
PATH2=$TwoPiRoot/libexec/bin
if [ -d ${PATH2} ]; then
    export PATH=$PATH:$PATH2
fi
export PATH=$TwoPiRoot/bin:$PATH

# added tcl-tk path (needed for OCC)
export PATH=$(brew --prefix)/opt/tcl-tk/bin:$PATH

export TwoPiGit=git@github.com:piScope


#GMSHLIB=$(dirname $(dirname $(dirname $(which gmsh))/$(readlink $(which gmsh))))/lib
#WXLIB=/usr/local/opt/wxpython/libexec/lib/python${PYTHONVERSION}/site-packages/
#export PYTHONPATH=$WXLIB:$GMSHLIB:$PYTHONPATH


PYTHONLIB1=$TwoPiRoot/lib/python${PYTHONVERSION}
mkdir -p $PYTHONLIB1/site-packages
PYTHONLIB2=$TwoPiRoot/libexec/lib/python${PYTHONVERSION}

if [ -d ${PYTHONLIB2} ]; then
    export PYTHONPATH=$PYTHONLIB1/site-packages:$PYTHONLIB2/site-packages:$PYTHONPATH
else
    export PYTHONPATH=$PYTHONLIB1/site-packages:$PYTHONPATH
fi

LLVMBIN=$(brew --prefix)/opt/llvm/bin
export PATH=$LLVMBIN:$PATH


ln -s $(brew --prefix)/include/rapidjson $TwoPiRoot/include/

# this is necessary to luanch piScope with proper framework enviroment

INTERPRETER=$(which python)

# define two alias as text 
ALIAS_PISCOPE="alias piscope=\"${TwoPiRoot}/bin/piscope -e ${INTERPRETER}\""
ALIAS_CIAO="alias ciao=\"echo Addio!;exit\""
ALIAS_TWOPI="alias twopi=\"${TwoPiRoot}/TwoPi/bin/twopi\""

#Prompot
# Note: Change color code based on following BASH colors
#Color	Code  Black	0;30
#              Blue	0;34
#              Green	0;32
#              Cyan	0;36
#              Red	0;31
#              Purple	0;35
#              Brown	0;33
#              Blue	0;34
#              Green	0;32
#              Cyan	0;36
#              Red	0;31
#              Purple	0;35
#              Brown	0;33

echo "starting ..." ${SHELL}
if [[ ${SHELL: (4)} == "/zsh" ]]; then
    PPS1="%B%{%F{green}%}""("${TWOPIVER}")""%b%{%F{black}%}""%n@%m ""%B%{%F{blue}%}""%1~ ""%b%{%F{black}%}""%# "    
    PPS2="PS1=\"""${PPS1}""\""
    
    RC=""
    if [[ -f $HOME/.zshrc ]]; then
	RC=$(cat ~/.zshrc);
    fi
    mkdir -p $HOME/.zshrc_twopi
    echo ${RC} > $HOME/.zshrc_twopi/.zshrc
    echo "${PPS2}" >> $HOME/.zshrc_twopi/.zshrc    
    echo "${ALIAS_PISCOPE}" >> $HOME/.zshrc_twopi/.zshrc
    echo "${ALIAS_CIAO}" >> $HOME/.zshrc_twopi/.zshrc
    echo "${ALIAS_TWOPI}" >> $HOME/.zshrc_twopi/.zshrc
    ZDOTDIR=$HOME/.zshrc_twopi zsh
else
    PPS1="("${TWOPIVER}")"
    PPS1="\[\e[1;32m\]"${PPS1}"\[\e[0m\]"
    PPS1=${PPS1}"\\h:\[\e[01;34m\]\W \[\e[0m\]\u\$ "
    PPS2="PS1=\"""${PPS1}""\""

    if [[ -f $HOME/.bashrc ]]; then
        /bin/bash --rcfile  <(cat ~/.bashrc; echo "${PPS2}"; echo "${ALIAS_PISCOPE}"; echo "${ALIAS_CIAO}"; echo "${ALIAS_TWOPI}")
    else
        /bin/bash --rcfile  <(echo "${PPS2}"; echo "${ALIAS_PISCOPE}"; echo "${ALIAS_CIAO}"; echo "${ALIAS_TWOPI}")
    fi
fi    









